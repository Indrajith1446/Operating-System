breakpoint;
alias function_no R1;
alias current_pid R2;
if(function_no==3) then
	breakpoint;
	while([DISK_STATUS_TABLE]==1) do
		[PROCESS_TABLE+(current_pid*16)+4]=WAIT_DISK;
		multipush(R1,R2);
		call SCHEDULER;
		multipop(R1,R2);
	endwhile;
	[DISK_STATUS_TABLE]=1;
	[DISK_STATUS_TABLE+4]=current_pid;
	return;
endif;
if(function_no==8) then 
	while([TERMINAL_STATUS_TABLE]==1) do
		[PROCESS_TABLE+(current_pid*16)+4]=WAIT_TERMINAL;
		multipush(R1,R2);
		call SCHEDULER;
		multipop(R1,R2);
	endwhile;
	[TERMINAL_STATUS_TABLE]=1;
	[TERMINAL_STATUS_TABLE+1]=current_pid;
	return;
endif;
if(function_no==9) then
	if(current_pid!=[TERMINAL_STATUS_TABLE+1]) then
		R0=-1;
		return;
	endif;
	[TERMINAL_STATUS_TABLE]=0;
	alias i R3;
	i=0;
	while(i<16) do
		if([PROCESS_TABLE+(i*16)+4]==WAIT_TERMINAL) then
			[PROCESS_TABLE+(i*16)+4]=READY;
		endif;
		i=i+1;
	endwhile;
	R0=0;
	return;
endif;
