//library
loadi(63,13);
loadi(64,14);
//init
loadi(65,7);
loadi(66,8);
//exhandler
loadi(2,15);
loadi(3,16);
//int4
loadi(10,23);
loadi(11,24);
//int5
loadi(12,25);
loadi(13,26);
//int6
loadi(14,27);
loadi(15,28);
//int7
loadi(16,29);
loadi(17,30);
//int 8
loadi(18,31);
loadi(19,32);
//int9
loadi(20,33);
loadi(21,34);
//int10
loadi(22,35);
loadi(23,36);
//int11
loadi(24,37);
loadi(25,38);
//int13
loadi(28,41);
loadi(29,42);
//int14
loadi(30,43);
loadi(31,44);
//int15
loadi(32,45);
loadi(33,46);
//timer
loadi(4,17);
loadi(5,18);
//console
loadi(8,21);
loadi(9,22);
//disk interupt
loadi(6,19);
loadi(7,20);
//module7sheduler
loadi(50,63);
loadi(51,64);
//module0
loadi(40,53);
loadi(41,54);
//module1
loadi(42,55);
loadi(43,56);
//module2
loadi(44,57);
loadi(45,58);
//module3
loadi(46,59);
loadi(47,60);
//module4
loadi(48,61);
loadi(49,62);
//rootfile
loadi(62,5);
//inodetable
loadi(59,3);
loadi(60,4);
//disk free list
loadi(61,2);
//initialising tst
[TERMINAL_STATUS_TABLE]=0;
//initialising dst
[DISK_STATUS_TABLE]=0;
PTBR=PAGE_TABLE_BASE+20;
//___initprocess___
//lib
[PTBR+0]=63;
[PTBR+1]="0100";
[PTBR+2]=64;
[PTBR+3]="0100";
//heap
[PTBR+4]=78;
[PTBR+5]="0110";
[PTBR+6]=79;
[PTBR+7]="0110";
//code
[PTBR+8]=65;
[PTBR+9]="0100";
[PTBR+10]=66;
[PTBR+11]="0100";
[PTBR+12]=-1;
[PTBR+13]="0000";
[PTBR+14]=-1;
[PTBR+15]="0000";
//stack
[PTBR+16]=76;
[PTBR+17]="0110";
[PTBR+18]=77;
[PTBR+19]="0110";
PTLR=10;
//___init___
[PROCESS_TABLE+16+11]=80;
[PROCESS_TABLE+16+1]=1;
[PROCESS_TABLE+16+3]=1;
[PROCESS_TABLE+16+4]=CREATED;
[PROCESS_TABLE+16+13]=8*512;
[PROCESS_TABLE+16+12]=0;
[PROCESS_TABLE+16+14]=PAGE_TABLE_BASE+20;
[PROCESS_TABLE+16+15]=10;
[76*512]=[65*512+1];
//init disk map
[DISK_MAP_TABLE+1*10+0]=-1;
[DISK_MAP_TABLE+1*10+1]=-1;
[DISK_MAP_TABLE+1*10+2]=-1;
[DISK_MAP_TABLE+1*10+3]=-1;
[DISK_MAP_TABLE+1*10+4]=65;
[DISK_MAP_TABLE+1*10+5]=66;
[DISK_MAP_TABLE+1*10+6]=-1;
[DISK_MAP_TABLE+1*10+7]=-1;
[DISK_MAP_TABLE+1*10+8]=-1;
[DISK_MAP_TABLE+1*10+9]=-1;
alias i R0;
//left process
i=2;
while(i<16) do
	[PROCESS_TABLE+16*i+4]=TERMINATED;
	i=i+1;
endwhile;
//init perprocess resource table;
i=0;
while(i<8) do
	[(80*512)+496+(2*i)]=-1;
	i=i+1;
endwhile;
//initialising memory free list
i=0;
while(i<86) do
	[MEMORY_FREE_LIST+i]=1;
	i=i+1;
endwhile;
while(i<128) do
	[MEMORY_FREE_LIST+i]=0;
	i=i+1;
endwhile;
[MEMORY_FREE_LIST+63]=[MEMORY_FREE_LIST+63]+1;
[MEMORY_FREE_LIST+64]=[MEMORY_FREE_LIST+64]+1;

//initialising semaphore
i=0;
while(i<32) do
	[SEMAPHORE_TABLE+i*4]=-1;
	[SEMAPHORE_TABLE+i*4+1]=0;
	i=i+1;
endwhile;
[SYSTEM_STATUS_TABLE+3]=0;
[SYSTEM_STATUS_TABLE+2]=127-85;
//initialising file status table
i=0;
while(i<60) do
	[FILE_STATUS_TABLE+i*4]=-1;
	[FILE_STATUS_TABLE+i*4+1]=-1;
	i=i+1;
endwhile;
//initialising buffer table
i=0;
while(i<4) do
	[BUFFER_TABLE+i*4]=-1;
	[BUFFER_TABLE+i*4+1]=-1;
	[BUFFER_TABLE+i*4+2]=-1;
	i=i+1;
endwhile;
//initialising open file table
i=0;
while(i<32) do
	[OPEN_FILE_TABLE+i*4]=-1;
	[OPEN_FILE_TABLE+i*4+1]=0;
	i=i+1;
endwhile;
return;
